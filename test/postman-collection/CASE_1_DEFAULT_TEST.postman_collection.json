{
	"info": {
		"_postman_id": "a5651563-f226-4224-a781-c1073c9a0e2c",
		"name": "CASE_1_DEFAULT_TEST",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET /v1/ping",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"pong\");\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/ping",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /v1/students",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.environment.set(\"STUDENT_ID\", \"12345\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"studentId\": \"12345\",\r\n  \"password\": \"패스워드\",\r\n  \"name\": \"학생 명\",\r\n  \"subscriptionPages\": [\r\n    \"1\",\r\n    \"2\"\r\n  ],\r\n  \"extra\": {}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/students",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"students"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /v1/pages",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"var schema = {\r",
							"    'type': 'object',\r",
							"    'required': [\r",
							"        'data',\r",
							"    ],\r",
							"    'properties': {\r",
							"        'data': {\r",
							"            'type': 'array',\r",
							"            'items': {\r",
							"                'required': [\r",
							"                    'pageId', 'schoolName', 'region', 'name'\r",
							"                ],\r",
							"                'properties': {\r",
							"                    'pageId': {'type': 'string','nullable': false},\r",
							"                    'schoolName': {'type': 'string','nullable': false},\r",
							"                    'region': {'type': 'string','nullable': false},\r",
							"                    'name': {'type': 'string','nullable': false},\r",
							"                    'description': {'type': 'string','nullable': false},\r",
							"                    'extra': {'type': 'object','nullable': false},\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        'extraData': {'type': 'object','nullable': false}\r",
							"    }\r",
							"};\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Reponse Body Schema is valid', function() {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"pm.test(\"Check the length of the response\", function () {\r",
							"    pm.expect(Object.keys(jsonData.data).length).to.equal(1);\r",
							"});\r",
							"pm.environment.set(\"PAGE_ID\", jsonData.data[0].pageId);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{ADMIN_TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"schoolName\": \"학교 명\",\r\n  \"region\": \"지역 명\",\r\n  \"name\": \"페이지 명\",\r\n  \"description\": \"페이지 설명\",\r\n  \"extra\": {}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/pages",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"pages"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /v1/students/{studentId}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"var schema = {\r",
							"    'type': 'object',\r",
							"    'required': [\r",
							"        'data',\r",
							"    ],\r",
							"    'properties': {\r",
							"        'data': {\r",
							"            'type': 'array',\r",
							"            'items': {\r",
							"                'required': [\r",
							"                    'studentId', 'name', 'createdAt', 'extra'\r",
							"                ],\r",
							"                'properties': {\r",
							"                    'studentId': {'type': 'string','nullable': false},\r",
							"                    'name': {'type': 'string','nullable': false},\r",
							"                    'createdAt': {'type': 'string','nullable': false},\r",
							"                    'extra': {'type': 'object','nullable': false},\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        'extraData': {'type': 'object','nullable': false}\r",
							"    }\r",
							"};\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Reponse Body Schema is valid', function() {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"pm.test(\"Check the length of the response\", function () {\r",
							"    pm.expect(Object.keys(jsonData.data).length).to.equal(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer MTIzNDU67Yyo7Iqk7JuM65Oc",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/students/{{STUDENT_ID}}",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"students",
						"{{STUDENT_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT /v1/students/{studentId}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer MTIzNDU67Yyo7Iqk7JuM65Oc",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"학생 명\",\r\n  \"extra\": {}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/students/{{STUDENT_ID}}",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"students",
						"{{STUDENT_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /v1/pages",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"var schema = {\r",
							"    'type': 'object',\r",
							"    'required': [\r",
							"        'data',\r",
							"    ],\r",
							"    'properties': {\r",
							"        'data': {\r",
							"            'type': 'array',\r",
							"            'items': {\r",
							"                'required': [\r",
							"                    'pageId', 'schoolName', 'region', 'name'\r",
							"                ],\r",
							"                'properties': {\r",
							"                    'pageId': {'type': 'string','nullable': false},\r",
							"                    'schoolName': {'type': 'string','nullable': false},\r",
							"                    'region': {'type': 'string','nullable': false},\r",
							"                    'name': {'type': 'string','nullable': false},\r",
							"                    'description': {'type': 'string','nullable': false},\r",
							"                    'extra': {'type': 'object','nullable': false},\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        'extraData': {'type': 'object','nullable': false}\r",
							"    }\r",
							"};\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Reponse Body Schema is valid', function() {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"pm.test(\"Response data's length is greater than 1\", function () {\r",
							"    pm.expect(jsonData.data.length >= 1).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{ADMIN_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/pages",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"pages"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /v1/pages/{pageId}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"var schema = {\r",
							"    'type': 'object',\r",
							"    'required': [\r",
							"        'data',\r",
							"    ],\r",
							"    'properties': {\r",
							"        'data': {\r",
							"            'type': 'array',\r",
							"            'items': {\r",
							"                'required': [\r",
							"                    'pageId', 'schoolName', 'region', 'name'\r",
							"                ],\r",
							"                'properties': {\r",
							"                    'pageId': {'type': 'string','nullable': false},\r",
							"                    'schoolName': {'type': 'string','nullable': false},\r",
							"                    'region': {'type': 'string','nullable': false},\r",
							"                    'name': {'type': 'string','nullable': false},\r",
							"                    'description': {'type': 'string','nullable': false},\r",
							"                    'extra': {'type': 'object','nullable': false},\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        'extraData': {'type': 'object','nullable': false}\r",
							"    }\r",
							"};\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Reponse Body Schema is valid', function() {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"pm.test(\"Check the length of the response\", function () {\r",
							"    pm.expect(Object.keys(jsonData.data).length).to.equal(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{ADMIN_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/pages/{{PAGE_ID}}",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"pages",
						"{{PAGE_ID}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT /v1/pages/{pageId}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{ADMIN_TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"페이지 명\",\r\n  \"description\": \"페이지 설명\",\r\n  \"extra\": {}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/pages/{{PAGE_ID}}",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"pages",
						"{{PAGE_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /v1/pages/{pageId}/news",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"var schema = {\r",
							"    'type': 'object',\r",
							"    'required': [\r",
							"        'data',\r",
							"    ],\r",
							"    'properties': {\r",
							"        'data': {\r",
							"            'type': 'array',\r",
							"            'items': {\r",
							"                'required': [\r",
							"                    'newsId', 'title', 'content', 'extra'\r",
							"                ],\r",
							"                'properties': {\r",
							"                    'newsId': {'type': 'string','nullable': false},\r",
							"                    'title': {'type': 'string','nullable': false},\r",
							"                    'content': {'type': 'string','nullable': false},\r",
							"                    'createdAt': {'type': 'string','nullable': false},\r",
							"                    'extra': {'type': 'object','nullable': false},\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        'extraData': {'type': 'object','nullable': false}\r",
							"    }\r",
							"};\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Reponse Body Schema is valid', function() {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"pm.test(\"Check the length of the response\", function () {\r",
							"    pm.expect(Object.keys(jsonData.data).length).to.equal(1);\r",
							"});\r",
							"pm.environment.set(\"NEWS_ID\", jsonData.data[0].newsId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{ADMIN_TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"제목\",\r\n  \"content\": \"내용\",\r\n  \"extra\": {}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/pages/{{PAGE_ID}}/news",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"pages",
						"{{PAGE_ID}}",
						"news"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /v1/pages/{pageId}/news",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"var schema = {\r",
							"    'type': 'object',\r",
							"    'required': [\r",
							"        'data',\r",
							"    ],\r",
							"    'properties': {\r",
							"        'data': {\r",
							"            'type': 'array',\r",
							"            'items': {\r",
							"                'required': [\r",
							"                    'newsId', 'title', 'content', 'createdAt', 'extra'\r",
							"                ],\r",
							"                'properties': {\r",
							"                    'newsId': {'type': 'string','nullable': false},\r",
							"                    'title': {'type': 'string','nullable': false},\r",
							"                    'content': {'type': 'string','nullable': false},\r",
							"                    'createdAt': {'type': 'string','nullable': false},\r",
							"                    'extra': {'type': 'object','nullable': false},\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        'extraData': {'type': 'object','nullable': false}\r",
							"    }\r",
							"};\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Reponse Body Schema is valid', function() {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"pm.test(\"Response data's length is greater than 1\", function () {\r",
							"    pm.expect(jsonData.data.length >= 1).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{ADMIN_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/pages/{{PAGE_ID}}/news",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"pages",
						"{{PAGE_ID}}",
						"news"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /v1/pages/{pageId}/news/{newsId}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"var schema = {\r",
							"    'type': 'object',\r",
							"    'required': [\r",
							"        'data',\r",
							"    ],\r",
							"    'properties': {\r",
							"        'data': {\r",
							"            'type': 'array',\r",
							"            'items': {\r",
							"                'required': [\r",
							"                    'newsId', 'title', 'content', 'createdAt', 'extra'\r",
							"                ],\r",
							"                'properties': {\r",
							"                    'newsId': {'type': 'string','nullable': false},\r",
							"                    'title': {'type': 'string','nullable': false},\r",
							"                    'content': {'type': 'string','nullable': false},\r",
							"                    'createdAt': {'type': 'string','nullable': false},\r",
							"                    'extra': {'type': 'object','nullable': false},\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        'extraData': {'type': 'object','nullable': false}\r",
							"    }\r",
							"};\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Reponse Body Schema is valid', function() {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"pm.test(\"Check the length of the response\", function () {\r",
							"    pm.expect(Object.keys(jsonData.data).length).to.equal(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{ADMIN_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/pages/{{PAGE_ID}}/news/{{NEWS_ID}}",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"pages",
						"{{PAGE_ID}}",
						"news",
						"{{NEWS_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT /v1/pages/{pageId}/news/{newsId}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{ADMIN_TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"제목\",\r\n  \"content\": \"내용\",\r\n  \"extra\": {}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/pages/{{PAGE_ID}}/news/{{NEWS_ID}}",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"pages",
						"{{PAGE_ID}}",
						"news",
						"{{NEWS_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH /v1/students/{studentId}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer MTIzNDU67Yyo7Iqk7JuM65Oc",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"type\": \"subscription-pages\",\r\n  \"subscriptionPages\": [\r\n      \"{{PAGE_ID}}\"\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/students/{{STUDENT_ID}}",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"students",
						"{{STUDENT_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /v1/students/{studentId}/subscription-news",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"var schema = {\r",
							"    'type': 'object',\r",
							"    'required': [\r",
							"        'data',\r",
							"    ],\r",
							"    'properties': {\r",
							"        'data': {\r",
							"            'type': 'array',\r",
							"            'items': {\r",
							"                'required': [\r",
							"                    'newsId', 'title', 'content', 'createdAt', 'extra'\r",
							"                ],\r",
							"                'properties': {\r",
							"                    'newsId': {'type': 'string','nullable': false},\r",
							"                    'title': {'type': 'string','nullable': false},\r",
							"                    'content': {'type': 'string','nullable': false},\r",
							"                    'createdAt': {'type': 'string','nullable': false},\r",
							"                    'extra': {'type': 'object','nullable': false},\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        'extraData': {'type': 'object','nullable': false}\r",
							"    }\r",
							"};\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Reponse Body Schema is valid', function() {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"pm.test(\"Response data's length is greater than 1\", function () {\r",
							"    pm.expect(jsonData.data.length >= 1).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer MTIzNDU67Yyo7Iqk7JuM65Oc",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/students/{{STUDENT_ID}}/subscription-news",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"students",
						"{{STUDENT_ID}}",
						"subscription-news"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL /v1/pages/{pageId}/news/{newsId}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{ADMIN_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/pages/{{PAGE_ID}}/news/{{NEWS_ID}}",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"pages",
						"{{PAGE_ID}}",
						"news",
						"{{NEWS_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL /v1/pages/{pageId}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{ADMIN_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/pages/{{PAGE_ID}}",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"pages",
						"{{PAGE_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL /v1/students/{studentId}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer MTIzNDU67Yyo7Iqk7JuM65Oc",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{NEWSFEED_HOST}}/v1/students/{{STUDENT_ID}}",
					"host": [
						"{{NEWSFEED_HOST}}"
					],
					"path": [
						"v1",
						"students",
						"{{STUDENT_ID}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}